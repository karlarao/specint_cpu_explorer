<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0907.1515                                -->
<workbook source-build='9.3.7 (9300.16.0907.1515)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='SPECint_rate2006_price' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='specprice#txt (specprice.txt)' inline='true' name='csv.41701.766587060185' version='9.3'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\karl\Desktop\tmp\SPECint_rate2006\specprice\specprice' driver='' filename='specprice.txt' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='specprice#txt' table='[specprice#txt]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='GroupByCores' datatype='integer' name='[#Cores (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[#Cores]' scope-isolation='false' />
      </column>
      <column caption='SpeedPerCore' datatype='real' name='[Calculation_0850303182539627]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Result]/[#Cores]' scope-isolation='false' />
      </column>
      <column caption='TotalPrice' datatype='integer' name='[Calculation_2770303182516856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[#Chips]*[Price]' scope-isolation='false' />
      </column>
      <column caption='ProcessorByGroup' datatype='string' name='[Calculation_9410303183739298]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Processor AMD] THEN &apos;AMD&apos;&#13;&#10;ELSEIF [Processor Intel] THEN &apos;INTEL&apos;&#13;&#10;ELSE &apos;Other&apos; END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Processor]' role='dimension' type='nominal' />
      <column datatype='datetime' name='[Published]' role='dimension' type='ordinal' />
      <column datatype='string' name='[System]' role='dimension' type='nominal' />
      <column-instance column='[Published]' derivation='Month' name='[mn:Published:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2770303182516856]' derivation='None' name='[none:Calculation_2770303182516856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
      <column-instance column='[System]' derivation='None' name='[none:System:nk]' pivot='key' type='nominal' />
      <column-instance column='[Published]' derivation='Quarter' name='[qr:Published:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Published]' derivation='Year' name='[yr:Published:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Published:ok]' />
          <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
          <groupfilter function='level-members' level='[none:Processor:nk]' />
          <groupfilter function='level-members' level='[none:System:nk]' />
          <groupfilter function='level-members' level='[qr:Published:ok]' />
          <groupfilter function='level-members' level='[yr:Published:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Published:ok]' />
          <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
          <groupfilter function='level-members' level='[none:System:nk]' />
          <groupfilter function='level-members' level='[qr:Published:ok]' />
          <groupfilter function='level-members' level='[yr:Published:ok]' />
        </groupfilter>
      </group>
      <group name='[Processor AMD]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron3250HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron3260HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron3280&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron3320EE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron3350HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron3380&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4122&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4130&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4162EE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4164EE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4170HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4174HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4176HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4180&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4184&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4226&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4228HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4230HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4234&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4238&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4240&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4256EE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4274HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4276HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4280&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4284&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4310EE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4332HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4334&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4340&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4376HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron4386&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6124HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6128&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6128HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6132HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6134&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6136&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6140&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6164HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6166HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6168&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6172&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6174&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6176&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6176SE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6180SE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6204&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6212&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6220&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6234&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6238&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6262HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6272&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6274&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6276&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6278&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6282SE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6284SE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6308&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6320&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6328&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6338P&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6344&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6348&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6366HE&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6370P&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6376&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6378&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6380&quot;' />
          <groupfilter function='member' level='[Processor]' member='&quot;AMDOpteron6386SE&quot;' />
        </groupfilter>
      </group>
      <group name='[Processor Intel]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter from='&quot;IntelXeonE3-1220v3&quot;' function='range' level='[Processor]' to='&quot;IntelXeonE7-8870&quot;' />
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='E:\GitHub\code_ninja\tableau\SPECint_rate2006_price\specprice.tde' schema='Extract' tablename='Extract' update-time='3/3/2014 11:24:15 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[#Cores (copy)]' formula='[#Cores]' />
            <calculation column='[Calculation_0850303182539627]' formula='[Result]/[#Cores]' />
            <calculation column='[Calculation_2770303182516856]' formula='[#Chips]*[Price]' />
            <calculation column='[Calculation_9410303183739298]' formula='IF [Processor AMD] THEN &apos;AMD&apos;&#13;&#10;ELSEIF [Processor Intel] THEN &apos;INTEL&apos;&#13;&#10;ELSE &apos;Other&apos; END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2941' timestamp-start='2014-03-03 23:24:15.592' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>#Chips</remote-name>
              <remote-type>2</remote-type>
              <local-name>[#Chips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#Chips</remote-alias>
              <ordinal>0</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>128</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#CoresPerChip</remote-name>
              <remote-type>16</remote-type>
              <local-name>[#CoresPerChip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#CoresPerChip</remote-alias>
              <ordinal>1</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>16</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#Cores</remote-name>
              <remote-type>2</remote-type>
              <local-name>[#Cores]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#Cores</remote-alias>
              <ordinal>2</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>1280</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#Cores (copy)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[#Cores (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#Cores (copy)</remote-alias>
              <ordinal>2</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>1280</statistic>
                <statistic aggregation='Count' datatype='integer'>2941</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#ThreadsPerCore</remote-name>
              <remote-type>16</remote-type>
              <local-name>[#ThreadsPerCore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#ThreadsPerCore</remote-alias>
              <ordinal>3</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1stLevelCache</remote-name>
              <remote-type>129</remote-type>
              <local-name>[1stLevelCache]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1stLevelCache</remote-alias>
              <ordinal>4</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;128KBIonchipperchip64KBIshared/2cores;16KBDonchippercore&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;64KBI+64KBDonchippercore&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2ndLevelCache</remote-name>
              <remote-type>129</remote-type>
              <local-name>[2ndLevelCache]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2ndLevelCache</remote-alias>
              <ordinal>5</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12MBI+Donchipperchip2MBshared/2cores&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8MBI+Donchipperchip2MBshared/2cores&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>3rdLevelCache</remote-name>
              <remote-type>129</remote-type>
              <local-name>[3rdLevelCache]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>3rdLevelCache</remote-alias>
              <ordinal>6</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10MBI+Donchipperchip&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8MBI+Donchipperchip&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>400Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[400Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>400Base</remote-alias>
              <ordinal>7</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>704</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>24768.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>41</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>400Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[400Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>400Peak</remote-alias>
              <ordinal>8</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>787</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3673.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>45</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>401Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[401Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>401Base</remote-alias>
              <ordinal>9</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>638</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>18143.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>34</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>401Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[401Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>401Peak</remote-alias>
              <ordinal>10</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>630</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2336.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>33</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>403Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[403Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>403Base</remote-alias>
              <ordinal>11</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>694</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>24742.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>40</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>403Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[403Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>403Peak</remote-alias>
              <ordinal>12</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>704</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2973.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>42</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>429Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[429Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>429Base</remote-alias>
              <ordinal>13</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>982</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>37378.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>51</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>429Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[429Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>429Peak</remote-alias>
              <ordinal>14</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1003</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>5206.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>53</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>445Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[445Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>445Base</remote-alias>
              <ordinal>15</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>680</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>27981.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>38</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>445Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[445Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>445Peak</remote-alias>
              <ordinal>16</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>689</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3594.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>39</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>456Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[456Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>456Base</remote-alias>
              <ordinal>17</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>923</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>46622.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>50</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>456Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[456Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>456Peak</remote-alias>
              <ordinal>18</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>997</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>6205.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>52</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>458Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[458Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>458Base</remote-alias>
              <ordinal>19</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>638</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26230.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>35</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>458Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[458Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>458Peak</remote-alias>
              <ordinal>20</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>655</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3520.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>37</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>462Base</remote-name>
              <remote-type>3</remote-type>
              <local-name>[462Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>462Base</remote-alias>
              <ordinal>21</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1752</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>225705</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>55</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>462Peak</remote-name>
              <remote-type>2</remote-type>
              <local-name>[462Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>462Peak</remote-alias>
              <ordinal>22</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1741</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>24571</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>54</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>464Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[464Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>464Base</remote-alias>
              <ordinal>23</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>859</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>41144.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>49</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>464Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[464Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>464Peak</remote-alias>
              <ordinal>24</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>848</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4853.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>48</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>471Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[471Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>471Base</remote-alias>
              <ordinal>25</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>617</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>17218.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>471Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[471Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>471Peak</remote-alias>
              <ordinal>26</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>628</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2291.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>32</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>473Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[473Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>473Base</remote-alias>
              <ordinal>27</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>621</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>22241.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>473Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[473Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>473Peak</remote-alias>
              <ordinal>28</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>639</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2218.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>36</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>483Base</remote-name>
              <remote-type>5</remote-type>
              <local-name>[483Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>483Base</remote-alias>
              <ordinal>29</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>836</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>28753.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>47</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>483Peak</remote-name>
              <remote-type>5</remote-type>
              <local-name>[483Peak]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>483Peak</remote-alias>
              <ordinal>30</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>834</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3682.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>46</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AutoParallelization</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AutoParallelization]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AutoParallelization</remote-alias>
              <ordinal>31</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;No&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yes&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BaseCopies</remote-name>
              <remote-type>2</remote-type>
              <local-name>[BaseCopies]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BaseCopies</remote-alias>
              <ordinal>32</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2540</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BasePointerSize</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BasePointerSize]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BasePointerSize</remote-alias>
              <ordinal>33</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;32-bit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;64-bit&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Baseline</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Baseline]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Baseline</remote-alias>
              <ordinal>34</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>726</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>31100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>44</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Benchmark</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Benchmark]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Benchmark</remote-alias>
              <ordinal>35</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CINT2006rate&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;CINT2006rate&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CPU(s)Orderable</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CPU(s)Orderable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CPU(s)Orderable</remote-alias>
              <ordinal>36</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1-8chips&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8chips&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Compiler</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Compiler]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Compiler</remote-alias>
              <ordinal>37</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;C/C++/Fortran:Version4.2.4ofOpen64CompilerSuite&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;x86Open644.3.2CompilerSuite(fromAMD)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FileSystem</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FileSystem]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FileSystem</remote-alias>
              <ordinal>38</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;NFSv3&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zfs(withraidz)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HWAvail</remote-name>
              <remote-type>135</remote-type>
              <local-name>[HWAvail]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HWAvail</remote-alias>
              <ordinal>39</ordinal>
              <family>specprice#txt</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>46</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2010-03-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2014-03-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HardwareVendor     </remote-name>
              <remote-type>129</remote-type>
              <local-name>[HardwareVendor     ]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HardwareVendor     </remote-alias>
              <ordinal>40</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ACTIONS.A.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UnisysCorporation&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>License</remote-name>
              <remote-type>2</remote-type>
              <local-name>[License]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>License</remote-alias>
              <ordinal>41</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>9046</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Memory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Memory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Memory</remote-alias>
              <ordinal>42</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;112GB(14x8GB2Rx4PC3-12800R-11ECC)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;96GB(6x16GB2Rx4PC3L-12800R-11ECC)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>43</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OperatingSystem</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OperatingSystem]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OperatingSystem</remote-alias>
              <ordinal>44</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>98</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;3.0.76-0.11-default&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Windows7Professional(64-bit)SP1&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OtherCache</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OtherCache]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OtherCache</remote-alias>
              <ordinal>45</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;60GBI+Doffchippersystem&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PeakPointerSize</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PeakPointerSize]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PeakPointerSize</remote-alias>
              <ordinal>46</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;32-bit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;NotApplicable&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>47</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>99</statistic>
                <statistic aggregation='Max' datatype='integer'>6619</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProcessorCharacteristics</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ProcessorCharacteristics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ProcessorCharacteristics</remote-alias>
              <ordinal>48</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>43</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMDTurboCOREtechnologyupto2.50GHz&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProcessorMHz</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ProcessorMHz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ProcessorMHz</remote-alias>
              <ordinal>49</ordinal>
              <family>specprice#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1600</statistic>
                <statistic aggregation='Max' datatype='integer'>3600</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Processor</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Processor]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Processor</remote-alias>
              <ordinal>50</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>163</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMDOpteron3250HE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;IntelXeonE7-8870&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Published</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Published]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Published</remote-alias>
              <ordinal>51</ordinal>
              <family>specprice#txt</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2010-03-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2014-03-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Result</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Result]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Result</remote-alias>
              <ordinal>52</ordinal>
              <family>specprice#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>718</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4110.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>43</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SWAvail</remote-name>
              <remote-type>135</remote-type>
              <local-name>[SWAvail]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SWAvail</remote-alias>
              <ordinal>53</ordinal>
              <family>specprice#txt</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>39</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2010-02-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2014-03-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>System</remote-name>
              <remote-type>129</remote-type>
              <local-name>[System]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>System</remote-alias>
              <ordinal>54</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2481</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A+Server1022G-NTFAMDOpteron6128&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;vSMPFoundation(AMDOpteron61722.10GHz)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>56</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TestDate</remote-name>
              <remote-type>135</remote-type>
              <local-name>[TestDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TestDate</remote-alias>
              <ordinal>55</ordinal>
              <family>specprice#txt</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2005-05-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2014-02-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TestSponsor</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TestSponsor]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TestSponsor</remote-alias>
              <ordinal>56</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ACTIONS.A.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UnisysCorporation&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TestedBy</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TestedBy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TestedBy</remote-alias>
              <ordinal>57</ordinal>
              <family>specprice#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ACTIONS.A.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UnisysCorporation&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Updated</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Updated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Updated</remote-alias>
              <ordinal>58</ordinal>
              <family>specprice#txt</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2012-03-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2014-03-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_0850303182539627</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_0850303182539627]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_0850303182539627</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>793</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>90686.102083333433</statistic>
                <statistic aggregation='Avg' datatype='real'>30.835124815822315</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>55.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>11.025347453139151</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.023472872244341</statistic>
                <statistic aggregation='Var' datatype='real'>121.55828646244196</statistic>
                <statistic aggregation='VarP' datatype='real'>121.5169541651069</statistic>
                <statistic aggregation='Count' datatype='integer'>2941</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3153698.6389995702</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_2770303182516856</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Calculation_2770303182516856]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2770303182516856</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>184</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9856206.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3351.3111186671199</statistic>
                <statistic aggregation='Min' datatype='integer'>99</statistic>
                <statistic aggregation='Max' datatype='integer'>562432</statistic>
                <statistic aggregation='Stdev' datatype='real'>14670.626596042828</statistic>
                <statistic aggregation='StdevP' datatype='real'>14668.132227820082</statistic>
                <statistic aggregation='Var' datatype='real'>215227284.72051919</statistic>
                <statistic aggregation='VarP' datatype='real'>215154103.05281416</statistic>
                <statistic aggregation='Count' datatype='integer'>2941</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>665799429834.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_9410303183739298</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_9410303183739298]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_9410303183739298</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>5</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMD&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2941</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>20</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.642349' group-percentage='0.0604982' measure-ordering='alphabetic' measure-percentage='0.297153' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Processor:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;AMDOpteron4234&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;AMDOpteron6140&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;AMDOpteron6284SE&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;IntelXeonE3-1285Lv3&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;IntelXeonE5-2450Lv2&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;IntelXeonE5-2650&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;IntelXeonE5-4610&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;IntelXeonE7-8837&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AMDOpteron3250HE&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AMDOpteron4240&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AMDOpteron6166HE&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AMDOpteron6320&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;IntelXeonE5-1620&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;IntelXeonE5-2470&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;IntelXeonE5-2650Lv2&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;IntelXeonE5-4620&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;IntelXeonE7-8860&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AMDOpteron3350HE&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AMDOpteron4280&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AMDOpteron6176&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AMDOpteron6348&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;IntelXeonE5-2403&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;IntelXeonE5-2609&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;IntelXeonE5-2665&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;IntelXeonE7-2803&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;AMDOpteron4184&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;AMDOpteron6128HE&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;AMDOpteron6274&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IntelXeonE3-1240v3&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IntelXeonE5-2440&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IntelXeonE5-2640&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IntelXeonE5-2695v2&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IntelXeonE7-4860&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;AMDOpteron4170HE&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;AMDOpteron4376HE&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;AMDOpteron6234&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;AMDOpteron6386SE&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;IntelXeonE5-2430&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;IntelXeonE5-2630Lv2&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;IntelXeonE5-2680v2&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;IntelXeonE7-4807&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AMDOpteron4162EE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AMDOpteron4334&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AMDOpteron6212&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AMDOpteron6378&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;IntelXeonE5-2420&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;IntelXeonE5-2630&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;IntelXeonE5-2670v2&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;IntelXeonE7-2860&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;AMDOpteron3380&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;AMDOpteron4284&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;AMDOpteron6176SE&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;AMDOpteron6366HE&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;IntelXeonE5-2403v2&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;IntelXeonE5-2609v2&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;IntelXeonE5-2667&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;IntelXeonE7-2820&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;AMDOpteron4238&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;AMDOpteron6164HE&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;AMDOpteron6308&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;IntelXeonE3-1285v3&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;IntelXeonE5-2450v2&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;IntelXeonE5-2650L&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;IntelXeonE5-4617&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;IntelXeonE7-8850&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AMDOpteron3260HE&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AMDOpteron4256EE&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AMDOpteron6168&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AMDOpteron6328&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;IntelXeonE5-1650&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;IntelXeonE5-2470v2&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;IntelXeonE5-2650v2&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;IntelXeonE5-4640&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;IntelXeonE7-8867L&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;AMDOpteron4228HE&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;AMDOpteron6134&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;AMDOpteron6278&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IntelXeonE3-1270v3&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IntelXeonE5-2450&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IntelXeonE5-2643&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IntelXeonE5-4603&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IntelXeonE7-4890v2&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;AMDOpteron4174HE&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;AMDOpteron4386&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;AMDOpteron6238&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IntelXeonE3-1220v3&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IntelXeonE5-2430L&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IntelXeonE5-2630v2&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IntelXeonE5-2687W&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IntelXeonE7-4820&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;AMDOpteron4164EE&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;AMDOpteron4340&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;AMDOpteron6220&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;AMDOpteron6380&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;IntelXeonE5-2420v2&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;IntelXeonE5-2630L&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;IntelXeonE5-2680&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;IntelXeonE7-2870&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;AMDOpteron4226&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;AMDOpteron6132HE&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;AMDOpteron6276&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IntelXeonE3-1265Lv3&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IntelXeonE5-2440v2&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IntelXeonE5-2640v2&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IntelXeonE5-2697v2&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IntelXeonE7-4870&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;AMDOpteron4122&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;AMDOpteron4310EE&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;AMDOpteron6180SE&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;AMDOpteron6370P&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;IntelXeonE5-2407&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;IntelXeonE5-2620&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;IntelXeonE5-2667v2&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;IntelXeonE7-2830&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;AMDOpteron4230HE&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;AMDOpteron6136&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;AMDOpteron6282SE&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IntelXeonE3-1280v3&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IntelXeonE5-2450L&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IntelXeonE5-2643v2&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IntelXeonE5-4607&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IntelXeonE7-8830&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;AMDOpteron4176HE&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;AMDOpteron6124HE&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;AMDOpteron6262HE&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IntelXeonE3-1230Lv3&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IntelXeonE5-2430Lv2&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IntelXeonE5-2637&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IntelXeonE5-2690&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IntelXeonE7-4830&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;AMDOpteron4180&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;AMDOpteron6128&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;AMDOpteron6272&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;IntelXeonE3-1230v3&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;IntelXeonE5-2430v2&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;IntelXeonE5-2637v2&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;IntelXeonE5-2690v2&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;IntelXeonE7-4850&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AMDOpteron3280&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AMDOpteron4274HE&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AMDOpteron6172&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AMDOpteron6338P&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IntelXeonE5-1650v2&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IntelXeonE5-2603&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IntelXeonE5-2660&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IntelXeonE5-4650&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IntelXeonE7-8870&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;AMDOpteron4130&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;AMDOpteron4332HE&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;AMDOpteron6204&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;AMDOpteron6376&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;IntelXeonE5-2407v2&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;IntelXeonE5-2620v2&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;IntelXeonE5-2670&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;IntelXeonE7-2850&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AMDOpteron3320EE&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AMDOpteron4276HE&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AMDOpteron6174&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AMDOpteron6344&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;IntelXeonE5-1660&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;IntelXeonE5-2603v2&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;IntelXeonE5-2660v2&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;IntelXeonE5-4650L&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='PriceByGroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='specprice#txt (specprice.txt)' name='csv.41701.766587060185' />
          </datasources>
          <datasource-dependencies datasource='csv.41701.766587060185'>
            <column datatype='integer' name='[#Chips]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='GroupByCores' datatype='integer' name='[#Cores (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[#Cores]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[#CoresPerChip]' role='measure' type='quantitative' />
            <column datatype='integer' name='[#Cores]' role='measure' type='quantitative' />
            <column caption='SpeedPerCore' datatype='real' name='[Calculation_0850303182539627]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Result]/[#Cores]' scope-isolation='false' />
            </column>
            <column caption='TotalPrice' datatype='integer' name='[Calculation_2770303182516856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[#Chips]*[Price]' scope-isolation='false' />
            </column>
            <column caption='ProcessorByGroup' datatype='string' name='[Calculation_9410303183739298]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Processor AMD] THEN &apos;AMD&apos;&#13;&#10;ELSEIF [Processor Intel] THEN &apos;INTEL&apos;&#13;&#10;ELSE &apos;Other&apos; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processor]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Published]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Result]' role='measure' type='quantitative' />
            <column datatype='string' name='[System]' role='dimension' type='nominal' />
            <column-instance column='[Published]' derivation='Month' name='[mn:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[#Chips]' derivation='None' name='[none:#Chips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[#Cores (copy)]' derivation='None' name='[none:#Cores (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[#CoresPerChip]' derivation='None' name='[none:#CoresPerChip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0850303182539627]' derivation='None' name='[none:Calculation_0850303182539627:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2770303182516856]' derivation='None' name='[none:Calculation_2770303182516856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303183739298]' derivation='None' name='[none:Calculation_9410303183739298:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
            <column-instance column='[System]' derivation='None' name='[none:System:nk]' pivot='key' type='nominal' />
            <column-instance column='[Published]' derivation='Quarter' name='[qr:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Published]' derivation='Year' name='[yr:Published:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:Processor:nk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:Published:ok]' member='7' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='70304' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processor:nk]' member='&quot;IntelXeonE7-4870&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:System:nk]' member='&quot;bullionE7-4870(160cores-4TBRAM)&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='3' />
                        <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIAltixUV1000(IntelXeonE7-48702.4GHz)&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[yr:Published:ok]' member='2011' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[mn:Published:ok]' member='4' />
                          <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='562432' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIUV2000(IntelXeonE5-46502.7GHz)&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='5' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='231424' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='4' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='10' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='462848' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[mn:Published:ok]' />
                  <hierarchy name='[none:Calculation_2770303182516856:qk]' />
                  <hierarchy name='[none:System:nk]' />
                  <hierarchy name='[qr:Published:ok]' />
                  <hierarchy name='[yr:Published:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.41701.766587060185].[none:Calculation_0850303182539627:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41701.766587060185].[none:Calculation_2770303182516856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41701.766587060185].[none:Calculation_0850303182539627:qk] + [csv.41701.766587060185].[none:Calculation_2770303182516856:qk])</rows>
        <cols>([csv.41701.766587060185].[none:#Cores (copy):ok] / [csv.41701.766587060185].[yr:Published:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='amd vs intel'>
      <table>
        <view>
          <datasources>
            <datasource caption='specprice#txt (specprice.txt)' name='csv.41701.766587060185' />
          </datasources>
          <datasource-dependencies datasource='csv.41701.766587060185'>
            <column datatype='integer' name='[#Chips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[#Cores]' role='measure' type='quantitative' />
            <column caption='SpeedPerCore' datatype='real' name='[Calculation_0850303182539627]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Result]/[#Cores]' scope-isolation='false' />
            </column>
            <column caption='TotalPrice' datatype='integer' name='[Calculation_2770303182516856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[#Chips]*[Price]' scope-isolation='false' />
            </column>
            <column caption='ProcessorByGroup' datatype='string' name='[Calculation_9410303183739298]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Processor AMD] THEN &apos;AMD&apos;&#13;&#10;ELSEIF [Processor Intel] THEN &apos;INTEL&apos;&#13;&#10;ELSE &apos;Other&apos; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processor]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Published]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Result]' role='measure' type='quantitative' />
            <column datatype='string' name='[System]' role='dimension' type='nominal' />
            <column-instance column='[Published]' derivation='Month' name='[mn:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0850303182539627]' derivation='None' name='[none:Calculation_0850303182539627:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2770303182516856]' derivation='None' name='[none:Calculation_2770303182516856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303183739298]' derivation='None' name='[none:Calculation_9410303183739298:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
            <column-instance column='[System]' derivation='None' name='[none:System:nk]' pivot='key' type='nominal' />
            <column-instance column='[Published]' derivation='Quarter' name='[qr:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Published]' derivation='Year' name='[yr:Published:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:Processor:nk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:Published:ok]' member='7' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='70304' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processor:nk]' member='&quot;IntelXeonE7-4870&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:System:nk]' member='&quot;bullionE7-4870(160cores-4TBRAM)&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='3' />
                        <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIAltixUV1000(IntelXeonE7-48702.4GHz)&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[yr:Published:ok]' member='2011' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[mn:Published:ok]' member='4' />
                          <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='562432' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIUV2000(IntelXeonE5-46502.7GHz)&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='5' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='231424' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='4' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='10' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='462848' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[mn:Published:ok]' />
                  <hierarchy name='[none:Calculation_2770303182516856:qk]' />
                  <hierarchy name='[none:System:nk]' />
                  <hierarchy name='[qr:Published:ok]' />
                  <hierarchy name='[yr:Published:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41701.766587060185].[none:Processor:nk]'>
            <groupfilter from='&quot;AMDOpteron3250HE&quot;' function='range' level='[none:Processor:nk]' to='&quot;IntelXeonE7-8870&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[none:Processor:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.41701.766587060185].[none:Calculation_0850303182539627:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41701.766587060185].[none:Calculation_2770303182516856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41701.766587060185].[none:Calculation_0850303182539627:qk] + [csv.41701.766587060185].[none:Calculation_2770303182516856:qk])</rows>
        <cols>([csv.41701.766587060185].[none:Calculation_9410303183739298:nk] / ([csv.41701.766587060185].[yr:Published:ok] / ([csv.41701.766587060185].[qr:Published:ok] / [csv.41701.766587060185].[mn:Published:ok])))</cols>
      </table>
    </worksheet>
    <worksheet name='amd vs intel cores'>
      <table>
        <view>
          <datasources>
            <datasource caption='specprice#txt (specprice.txt)' name='csv.41701.766587060185' />
          </datasources>
          <datasource-dependencies datasource='csv.41701.766587060185'>
            <column datatype='integer' name='[#Chips]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='GroupByCores' datatype='integer' name='[#Cores (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[#Cores]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[#CoresPerChip]' role='measure' type='quantitative' />
            <column datatype='integer' name='[#Cores]' role='measure' type='quantitative' />
            <column datatype='integer' name='[#ThreadsPerCore]' role='measure' type='quantitative' />
            <column caption='SpeedPerCore' datatype='real' name='[Calculation_0850303182539627]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Result]/[#Cores]' scope-isolation='false' />
            </column>
            <column caption='TotalPrice' datatype='integer' name='[Calculation_2770303182516856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[#Chips]*[Price]' scope-isolation='false' />
            </column>
            <column caption='ProcessorByGroup' datatype='string' name='[Calculation_9410303183739298]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Processor AMD] THEN &apos;AMD&apos;&#13;&#10;ELSEIF [Processor Intel] THEN &apos;INTEL&apos;&#13;&#10;ELSE &apos;Other&apos; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processor]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Published]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Result]' role='measure' type='quantitative' />
            <column datatype='string' name='[System]' role='dimension' type='nominal' />
            <column-instance column='[Published]' derivation='Month' name='[mn:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[#Chips]' derivation='None' name='[none:#Chips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[#Cores (copy)]' derivation='None' name='[none:#Cores (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[#CoresPerChip]' derivation='None' name='[none:#CoresPerChip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[#ThreadsPerCore]' derivation='None' name='[none:#ThreadsPerCore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0850303182539627]' derivation='None' name='[none:Calculation_0850303182539627:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2770303182516856]' derivation='None' name='[none:Calculation_2770303182516856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303183739298]' derivation='None' name='[none:Calculation_9410303183739298:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
            <column-instance column='[System]' derivation='None' name='[none:System:nk]' pivot='key' type='nominal' />
            <column-instance column='[Published]' derivation='Quarter' name='[qr:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Published]' derivation='Year' name='[yr:Published:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:Processor:nk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:Published:ok]' member='7' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='70304' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processor:nk]' member='&quot;IntelXeonE7-4870&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:System:nk]' member='&quot;bullionE7-4870(160cores-4TBRAM)&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='3' />
                        <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIAltixUV1000(IntelXeonE7-48702.4GHz)&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[yr:Published:ok]' member='2011' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[mn:Published:ok]' member='4' />
                          <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='562432' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIUV2000(IntelXeonE5-46502.7GHz)&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='5' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='231424' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='4' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='10' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='462848' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[mn:Published:ok]' />
                  <hierarchy name='[none:Calculation_2770303182516856:qk]' />
                  <hierarchy name='[none:System:nk]' />
                  <hierarchy name='[qr:Published:ok]' />
                  <hierarchy name='[yr:Published:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[csv.41701.766587060185].[none:#Chips:qk]' included-values='in-range'>
            <min>2</min>
            <max>2</max>
          </filter>
          <slices>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[none:#Chips:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
              <lod column='[csv.41701.766587060185].[none:#ThreadsPerCore:qk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.41701.766587060185].[none:Calculation_0850303182539627:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
              <lod column='[csv.41701.766587060185].[none:#ThreadsPerCore:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41701.766587060185].[none:Calculation_2770303182516856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
              <lod column='[csv.41701.766587060185].[none:#ThreadsPerCore:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41701.766587060185].[none:Calculation_0850303182539627:qk] + [csv.41701.766587060185].[none:Calculation_2770303182516856:qk])</rows>
        <cols>([csv.41701.766587060185].[none:Calculation_9410303183739298:nk] / ([csv.41701.766587060185].[none:#Cores (copy):ok] / [csv.41701.766587060185].[yr:Published:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='intel e5'>
      <table>
        <view>
          <datasources>
            <datasource caption='specprice#txt (specprice.txt)' name='csv.41701.766587060185' />
          </datasources>
          <datasource-dependencies datasource='csv.41701.766587060185'>
            <column datatype='integer' name='[#Chips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[#Cores]' role='measure' type='quantitative' />
            <column caption='SpeedPerCore' datatype='real' name='[Calculation_0850303182539627]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Result]/[#Cores]' scope-isolation='false' />
            </column>
            <column caption='TotalPrice' datatype='integer' name='[Calculation_2770303182516856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[#Chips]*[Price]' scope-isolation='false' />
            </column>
            <column caption='ProcessorByGroup' datatype='string' name='[Calculation_9410303183739298]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Processor AMD] THEN &apos;AMD&apos;&#13;&#10;ELSEIF [Processor Intel] THEN &apos;INTEL&apos;&#13;&#10;ELSE &apos;Other&apos; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processor]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Published]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Result]' role='measure' type='quantitative' />
            <column datatype='string' name='[System]' role='dimension' type='nominal' />
            <column-instance column='[Published]' derivation='Month' name='[mn:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0850303182539627]' derivation='None' name='[none:Calculation_0850303182539627:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2770303182516856]' derivation='None' name='[none:Calculation_2770303182516856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303183739298]' derivation='None' name='[none:Calculation_9410303183739298:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
            <column-instance column='[System]' derivation='None' name='[none:System:nk]' pivot='key' type='nominal' />
            <column-instance column='[Published]' derivation='Quarter' name='[qr:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Published]' derivation='Year' name='[yr:Published:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:Processor:nk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:Published:ok]' member='7' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='70304' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processor:nk]' member='&quot;IntelXeonE7-4870&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:System:nk]' member='&quot;bullionE7-4870(160cores-4TBRAM)&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='3' />
                        <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIAltixUV1000(IntelXeonE7-48702.4GHz)&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[yr:Published:ok]' member='2011' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[mn:Published:ok]' member='4' />
                          <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='562432' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIUV2000(IntelXeonE5-46502.7GHz)&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='5' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='231424' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='4' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='10' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='462848' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[mn:Published:ok]' />
                  <hierarchy name='[none:Calculation_2770303182516856:qk]' />
                  <hierarchy name='[none:System:nk]' />
                  <hierarchy name='[qr:Published:ok]' />
                  <hierarchy name='[yr:Published:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41701.766587060185].[none:Processor:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Processor:nk]' member='&quot;IntelXeonE5-2690&quot;' />
              <groupfilter function='member' level='[none:Processor:nk]' member='&quot;IntelXeonE5-2697v2&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[none:Processor:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.41701.766587060185].[none:Calculation_0850303182539627:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41701.766587060185].[none:Calculation_2770303182516856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41701.766587060185].[none:Calculation_0850303182539627:qk] + [csv.41701.766587060185].[none:Calculation_2770303182516856:qk])</rows>
        <cols>([csv.41701.766587060185].[none:Calculation_9410303183739298:nk] / ([csv.41701.766587060185].[yr:Published:ok] / ([csv.41701.766587060185].[qr:Published:ok] / [csv.41701.766587060185].[mn:Published:ok])))</cols>
      </table>
    </worksheet>
    <worksheet name='sets'>
      <table>
        <view>
          <datasources>
            <datasource caption='specprice#txt (specprice.txt)' name='csv.41701.766587060185' />
          </datasources>
          <datasource-dependencies datasource='csv.41701.766587060185'>
            <column datatype='string' name='[Processor]' role='dimension' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41701.766587060185].[none:Processor:nk]'>
            <groupfilter expression='CONTAINS(LOWER([Processor]), LOWER(&apos;intel&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='intel' user:ui-pattern_type='contains'>
              <groupfilter from='&quot;AMDOpteron3250HE&quot;' function='range' level='[none:Processor:nk]' to='&quot;IntelXeonE7-8870&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41701.766587060185].[none:Processor:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[csv.41701.766587060185].[none:Processor:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='speedprice'>
      <table>
        <view>
          <datasources>
            <datasource caption='specprice#txt (specprice.txt)' name='csv.41701.766587060185' />
          </datasources>
          <datasource-dependencies datasource='csv.41701.766587060185'>
            <column datatype='integer' name='[#Chips]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='GroupByCores' datatype='integer' name='[#Cores (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[#Cores]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[#CoresPerChip]' role='measure' type='quantitative' />
            <column datatype='integer' name='[#Cores]' role='measure' type='quantitative' />
            <column caption='SpeedPerCore' datatype='real' name='[Calculation_0850303182539627]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Result]/[#Cores]' scope-isolation='false' />
            </column>
            <column caption='TotalPrice' datatype='integer' name='[Calculation_2770303182516856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[#Chips]*[Price]' scope-isolation='false' />
            </column>
            <column caption='ProcessorByGroup' datatype='string' name='[Calculation_9410303183739298]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Processor AMD] THEN &apos;AMD&apos;&#13;&#10;ELSEIF [Processor Intel] THEN &apos;INTEL&apos;&#13;&#10;ELSE &apos;Other&apos; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processor]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Published]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Result]' role='measure' type='quantitative' />
            <column datatype='string' name='[System]' role='dimension' type='nominal' />
            <column-instance column='[Published]' derivation='Month' name='[mn:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[#Chips]' derivation='None' name='[none:#Chips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[#Cores (copy)]' derivation='None' name='[none:#Cores (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[#CoresPerChip]' derivation='None' name='[none:#CoresPerChip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0850303182539627]' derivation='None' name='[none:Calculation_0850303182539627:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2770303182516856]' derivation='None' name='[none:Calculation_2770303182516856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303183739298]' derivation='None' name='[none:Calculation_9410303183739298:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
            <column-instance column='[System]' derivation='None' name='[none:System:nk]' pivot='key' type='nominal' />
            <column-instance column='[Published]' derivation='Quarter' name='[qr:Published:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Published]' derivation='Year' name='[yr:Published:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:Processor:nk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:Published:ok]' member='7' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='70304' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processor:nk]' member='&quot;IntelXeonE7-4870&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:System:nk]' member='&quot;bullionE7-4870(160cores-4TBRAM)&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='3' />
                        <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:Published:ok]' />
                <groupfilter function='level-members' level='[none:Calculation_2770303182516856:qk]' />
                <groupfilter function='level-members' level='[none:System:nk]' />
                <groupfilter function='level-members' level='[qr:Published:ok]' />
                <groupfilter function='level-members' level='[yr:Published:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIAltixUV1000(IntelXeonE7-48702.4GHz)&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[yr:Published:ok]' member='2011' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[mn:Published:ok]' member='4' />
                          <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='562432' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:System:nk]' member='&quot;SGIUV2000(IntelXeonE5-46502.7GHz)&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='2' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='5' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='231424' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:Published:ok]' member='4' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:Published:ok]' member='2012' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[mn:Published:ok]' member='10' />
                            <groupfilter function='member' level='[none:Calculation_2770303182516856:qk]' member='462848' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[mn:Published:ok]' />
                  <hierarchy name='[none:Calculation_2770303182516856:qk]' />
                  <hierarchy name='[none:System:nk]' />
                  <hierarchy name='[qr:Published:ok]' />
                  <hierarchy name='[yr:Published:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,System,QUARTER(Published),YEAR(Published))]</column>
            <column>[csv.41701.766587060185].[Exclusions (MONTH(Published),TotalPrice,Processor,System,QUARTER(Published),YEAR(Published))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.41701.766587060185].[none:Calculation_0850303182539627:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41701.766587060185].[none:Calculation_2770303182516856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41701.766587060185].[none:Processor:nk]' />
              <lod column='[csv.41701.766587060185].[none:System:nk]' />
              <lod column='[csv.41701.766587060185].[none:#Chips:qk]' />
              <lod column='[csv.41701.766587060185].[none:#CoresPerChip:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41701.766587060185].[none:Calculation_0850303182539627:qk] + [csv.41701.766587060185].[none:Calculation_2770303182516856:qk])</rows>
        <cols>([csv.41701.766587060185].[none:Calculation_9410303183739298:nk] / ([csv.41701.766587060185].[none:#Cores (copy):ok] / [csv.41701.766587060185].[yr:Published:ok]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='speedprice'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41701.766587060185].[none:Processor:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[csv.41701.671071851852].[none:Published:nk]</field>
            <field>[csv.41701.671071851852].[yr:Published:ok]</field>
            <field>[csv.41701.674646423613].[yr:Published:ok]</field>
            <field>[csv.41701.764260775461].[none:Published:nk]</field>
            <field>[csv.41701.766587060185].[none:#Cores (copy):ok]</field>
            <field>[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]</field>
            <field>[csv.41701.766587060185].[none:Processor:nk]</field>
            <field>[csv.41701.766587060185].[none:System:nk]</field>
            <field>[csv.41701.766587060185].[yr:Published:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PriceByGroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='39' type='pages' />
            <card size='67' type='filters' />
            <card size='307' type='marks' />
            <card pane-specification-id='1' param='[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]' size='41' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[csv.41701.671071851852].[none:Published:nk]</field>
            <field>[csv.41701.671071851852].[yr:Published:ok]</field>
            <field>[csv.41701.674646423613].[yr:Published:ok]</field>
            <field>[csv.41701.764260775461].[none:Published:nk]</field>
            <field>[csv.41701.766587060185].[none:#Cores (copy):ok]</field>
            <field>[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]</field>
            <field>[csv.41701.766587060185].[none:System:nk]</field>
            <field>[csv.41701.766587060185].[yr:Published:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='amd vs intel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='39' type='pages' />
            <card size='74' type='filters' />
            <card size='263' type='marks' />
            <card pane-specification-id='1' param='[csv.41701.766587060185].[none:Processor:nk]' size='80' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[csv.41701.671071851852].[none:Published:nk]</field>
            <field>[csv.41701.671071851852].[yr:Published:ok]</field>
            <field>[csv.41701.674646423613].[yr:Published:ok]</field>
            <field>[csv.41701.764260775461].[none:Published:nk]</field>
            <field>[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]</field>
            <field>[csv.41701.766587060185].[none:Processor:nk]</field>
            <field>[csv.41701.766587060185].[none:System:nk]</field>
            <field>[csv.41701.766587060185].[yr:Published:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='amd vs intel cores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41701.766587060185].[none:Processor:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[csv.41701.671071851852].[none:Published:nk]</field>
            <field>[csv.41701.671071851852].[yr:Published:ok]</field>
            <field>[csv.41701.674646423613].[yr:Published:ok]</field>
            <field>[csv.41701.764260775461].[none:Published:nk]</field>
            <field>[csv.41701.766587060185].[none:#Cores (copy):ok]</field>
            <field>[csv.41701.766587060185].[none:Processor:nk]</field>
            <field>[csv.41701.766587060185].[none:System:nk]</field>
            <field>[csv.41701.766587060185].[yr:Published:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='intel e5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41701.766587060185].[none:Processor:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[csv.41701.671071851852].[none:Published:nk]</field>
            <field>[csv.41701.671071851852].[yr:Published:ok]</field>
            <field>[csv.41701.674646423613].[yr:Published:ok]</field>
            <field>[csv.41701.764260775461].[none:Published:nk]</field>
            <field>[csv.41701.766587060185].[none:Calculation_9410303183739298:nk]</field>
            <field>[csv.41701.766587060185].[none:Processor:nk]</field>
            <field>[csv.41701.766587060185].[none:System:nk]</field>
            <field>[csv.41701.766587060185].[yr:Published:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1220v3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1230Lv3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1230v3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1240v3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1265Lv3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1270v3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1280v3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1285Lv3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE3-1285v3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-1620&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-1650&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-1650v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-1660&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2403&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2403v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2407&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2407v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2420&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2420v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2430&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2430L&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2430Lv2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2430v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2440&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2440v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2450&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2450L&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2450Lv2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2450v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2470&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2470v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2603&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2603v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2609&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2609v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2620&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2620v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2630&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2630L&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2630Lv2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2630v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2637&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2637v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2640&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2640v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2643&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2643v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2650&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2650L&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2650Lv2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2650v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2660&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2660v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2665&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2667&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2667v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2670&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2670v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2680&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2680v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2687W&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2690&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2690v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2695v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-2697v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4603&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4607&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4610&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4617&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4620&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4640&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4650&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE5-4650L&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-2803&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-2820&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-2830&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-2850&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-2860&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-2870&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-4807&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-4820&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-4830&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-4850&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-4860&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-4870&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-4890v2&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-8830&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-8837&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-8850&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-8860&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-8867L&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[csv.41701.766587060185].[none:Processor:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;IntelXeonE7-8870&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[csv.41701.766587060185].[none:Processor:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='speedprice' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PriceByGroup' width='192'>
      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
      TSIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='amd vs intel' width='192'>
      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
      C/FqM6sCg7PDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='amd vs intel cores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='intel e5' width='192'>
      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
      3dgx/j+vxg4gu7lHQQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sets' width='184'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
